<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>F.S.Bellelli</title>
    <link>https://fbellelli.com/</link>
    <atom:link href="https://fbellelli.com/index.xml" rel="self" type="application/rss+xml"/>
    <description>This is the personal website of Francesco Saverio Bellelli. From time to time, I post about things that I find interesting or about some recent work I have been doing. 
</description>
    <image>
      <title>F.S.Bellelli</title>
      <url>https://fbellelli.com/images/favicon feather.ico</url>
      <link>https://fbellelli.com/</link>
    </image>
    <generator>Distill</generator>
    <lastBuildDate>Sun, 22 May 2022 00:00:00 +0000</lastBuildDate>
    <item>
      <title>A brief introduction to natural hazard risk analysis</title>
      <dc:creator>Francesco S. Bellelli</dc:creator>
      <link>https://fbellelli.com/posts/2022-05-22-a-brief-introduction-to-natural-hazard-risk-analysis</link>
      <description>This article is a quick guide on the basic steps involved in natural hazard risk analysis. It briefly touches on some of the most common steps:  geocoding, hazard maps, damage curves and climate projections. I demonstrate how R can be used to assess exposure of assets with a simple example on flood risk for presidential palaces around the world.</description>
      <category>risk</category>
      <category>coding</category>
      <category>environment</category>
      <category>other</category>
      <guid>https://fbellelli.com/posts/2022-05-22-a-brief-introduction-to-natural-hazard-risk-analysis</guid>
      <pubDate>Sun, 22 May 2022 00:00:00 +0000</pubDate>
      <media:content url="https://fbellelli.com/posts/2022-05-22-a-brief-introduction-to-natural-hazard-risk-analysis/flood.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>First version of countries</title>
      <dc:creator>Francesco S. Bellelli</dc:creator>
      <link>https://fbellelli.com/posts/2022-02-27-first-version-of-countries</link>
      <description>The first development version of the package countries is now available on Github. This post looks at how the package can be used to work with country names.</description>
      <category>coding</category>
      <guid>https://fbellelli.com/posts/2022-02-27-first-version-of-countries</guid>
      <pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate>
      <media:content url="https://fbellelli.com/posts/2022-02-27-first-version-of-countries/../../images/Countries_logo.png" medium="image" type="image/png" width="864" height="1000"/>
    </item>
    <item>
      <title>Mishmash of charts</title>
      <dc:creator>Francesco S. Bellelli</dc:creator>
      <link>https://fbellelli.com/posts/2021-12-18-mishmash-of-charts</link>
      <description>This article is a selection of charts that I prepared over the last three years.</description>
      <category>economics</category>
      <category>other</category>
      <guid>https://fbellelli.com/posts/2021-12-18-mishmash-of-charts</guid>
      <pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate>
      <media:content url="https://fbellelli.com/posts/2021-12-18-mishmash-of-charts/../../papers/map pictet.gif" medium="image" type="image/gif"/>
    </item>
    <item>
      <title>The 2021 World Trade Report is out</title>
      <dc:creator>Francesco S. Bellelli</dc:creator>
      <link>https://fbellelli.com/posts/2021-11-16-the-world-trade-report-is-out</link>
      <description>I had the honour to contribute to the writing of this year's edition of the World Trade Report, the flagship economic publication of the World Trade Organization.  The report explores the role of trade, trade policy and international cooperation in building economic resilience in a world marked by increasing risks. In this article, I briefly outline my contributions on risk trends and policy responses to shocks.</description>
      <category>economics</category>
      <category>trade</category>
      <category>risk</category>
      <guid>https://fbellelli.com/posts/2021-11-16-the-world-trade-report-is-out</guid>
      <pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate>
      <media:content url="https://www.wto.org/images/img_bkshop/wtr21_e.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>All you need to know about the Paris Agreement ahead of COP26</title>
      <dc:creator>Francesco S. Bellelli</dc:creator>
      <link>https://fbellelli.com/posts/2021-10-24-all-you-need-to-know-about-the-paris-agreement-ahead-of-cop26</link>
      <description>Only one week left to the official start of the COP26 in Glasgow, in which global leaders will meet to take crucial decisions on climate change. Scientific evidence shows that we are running out of time. If we wish to avoid the worst scenario, it's now or never. What will come out of the summit? Will it be a flop or a success? We don't know yet, but this article will quickly get you up to speed with climate talks.</description>
      <category>environment</category>
      <guid>https://fbellelli.com/posts/2021-10-24-all-you-need-to-know-about-the-paris-agreement-ahead-of-cop26</guid>
      <pubDate>Sun, 24 Oct 2021 00:00:00 +0000</pubDate>
      <media:content url="https://fbellelli.com/posts/2021-10-24-all-you-need-to-know-about-the-paris-agreement-ahead-of-cop26/pexels-pixabay-221012.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>How has the pandemic affected the office space market?</title>
      <dc:creator>Francesco S. Bellelli</dc:creator>
      <link>https://fbellelli.com/posts/2021-08-15-pandemic-and-the-office-space-market</link>
      <description>In this post I have a look at data from the City of London to understand how the pandemic has impacted the office market.</description>
      <category>economics</category>
      <guid>https://fbellelli.com/posts/2021-08-15-pandemic-and-the-office-space-market</guid>
      <pubDate>Sun, 15 Aug 2021 00:00:00 +0000</pubDate>
      <media:content url="https://fbellelli.com/posts/2021-08-15-pandemic-and-the-office-space-market/city2_preview.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>The fascinating world of Voronoi diagrams</title>
      <dc:creator>Francesco S. Bellelli</dc:creator>
      <link>https://fbellelli.com/posts/2021-07-08-the-fascinating-world-of-voronoi-diagrams</link>
      <description>


&lt;p&gt;&lt;img src="https://fbellelli.com//posts/2021-07-08-the-fascinating-world-of-voronoi-diagramsvoronoi_colour.png" width="1968" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Voronoi diagrams&lt;/strong&gt; (also known as &lt;em&gt;Dirichlet tesselation&lt;/em&gt; or &lt;em&gt;Thiessen polygons&lt;/em&gt;) are everywhere in nature. You have encountered them thousands of times, but maybe did not call it this way. Voronoi diagram are simple, yet they have incredible properties which have found applications in fields ranging from cartography, biology, computer science, statistics, archaeology, all way to architecture and arts.&lt;/p&gt;
&lt;h2 id="what-is-a-voronoi-diagram"&gt;What is a Voronoi diagram?&lt;/h2&gt;
&lt;p&gt;Suppose you have &lt;span class="math inline"&gt;\(n\)&lt;/span&gt; points scattered on a plane, the Voronoi diagram of those points subdivides the plane in exactly &lt;span class="math inline"&gt;\(n\)&lt;/span&gt; cells enclosing the portion of the plane that is the closest to the each point. This produces a tessellation that completely covers the plane. As an illustration, in Figure 1, I plotted 100 random points and their corresponding Voronoi diagram. As you can see, every point is enclosed in a cell, whose boundaries are exactly equidistant between two or more points. In other words, all the area enclosed in the cell is closest to the point in the cell than to any other point.&lt;/p&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="file43849c32422_files/figure-html/unnamed-chunk-2-1.png" alt="Voronoi diagram from 100 random points in a plane" width="576" /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-2)Voronoi diagram from 100 random points in a plane
&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="voronoi-patterns-are-ubiquitous"&gt;Voronoi patterns are ubiquitous&lt;/h2&gt;
&lt;h3 id="voronoi-patterns-in-nature"&gt;Voronoi patterns in nature&lt;/h3&gt;
&lt;p&gt;The pattern created by Voronoi diagrams is a common one in nature. In Figure 3, I made a small collage of some naturally occurring Voronoi-like patterns. From microscopic cells in onion skins, to the shell of jackfruits and the coat of giraffes. These patterns are everywhere!&lt;/p&gt;
&lt;p&gt;A first reason for their omnipresence is that they form efficient shapes. As we mentioned earlier, Voronoi diagram completely tessellates the plan: hence, all space is used. This is very convenient if you are trying to squeeze as much as possible in a limited space — such as in muscle fibres or bee hives. Secondly, Voronoi diagrams are a spontaneous pattern whenever something is growing at a uniform growth rate from separate points (see Figure 2). For instance, this explains giraffe exhibit such patterns. Giraffe embryos have a scattered distribution of melanin-secreting cells, which is responsible for the dark pigmentation of the giraffe’s spots. Over the course of the gestation these cells release melanin — hence spots radiate outward. Interested reader may refer to &lt;a href="https://www.iro.umontreal.ca/~poulin/fournier/papers/Walter-2001-ISP/Walter-2001-ISP.pdf"&gt;this paper&lt;/a&gt;, in which the authors use Voronoi diagrams to model computer rendering of spots on animals coats.&lt;/p&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="https://fbellelli.com//posts/2021-07-08-the-fascinating-world-of-voronoi-diagramsVoronoi_growth_euclidean.gif" alt="A Voronoi diagram is obtained from constant outward growth from dispered points&amp;lt;br&amp;gt;Source: Wikipedia"  /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-3)A Voronoi diagram is obtained from constant outward growth from dispered points&lt;br&gt;Source: Wikipedia
&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img src="https://fbellelli.com//posts/2021-07-08-the-fascinating-world-of-voronoi-diagramscollage%20voronoi.png" alt="Voronoi patterns are everywhere in nature. &amp;lt;br&amp;gt;(From top-left to bottom right: microscope view of onion skin cells, cross-section of a muscle, garlic bulb, wings of a dragonfly, soap bubbles, close-up of a leaf, giraffes coat patterns, corns, jackfruits hanging from a tree.)" width="750" /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-4)Voronoi patterns are everywhere in nature. &lt;br&gt;(From top-left to bottom right: microscope view of onion skin cells, cross-section of a muscle, garlic bulb, wings of a dragonfly, soap bubbles, close-up of a leaf, giraffes coat patterns, corns, jackfruits hanging from a tree.)
&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id="voronoi-pattern-in-architecture-and-arts"&gt;Voronoi pattern in architecture and arts&lt;/h3&gt;
&lt;p&gt;Perhaps because of their spontaneous “natural” look, or simply because of their mesmerising randomness, Voronoi patterns have intentionally been implemented in human-made structures. An architectural example is the “Water cube” built to house the water sports during the 2008 Beijing Olympics. It features Voronoi diagrams on its ceiling and façades (Figure 4). The Voronoi diagrams were chosen because they recall bubbles&lt;a href="#fn1" class="footnote-ref" id="fnref1"&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;. This analogy is very clear at night, when the entire façade is illuminated in blue and comes alive.&lt;/p&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="https://fbellelli.com//posts/2021-07-08-the-fascinating-world-of-voronoi-diagramswater%20cube2.png" alt="Water cube in Beijing" width="600" /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-5)Water cube in Beijing
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;But Chinese appreciation of Voronoi pattern is surely older than this building. &lt;a href="https://en.wikipedia.org/wiki/Guan_ware"&gt;Guan&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Ge_ware"&gt;Ge&lt;/a&gt; ware from the Song dynasty have a distinctive crackled glaze. Ceramics can easily crack during the cooling process, however the crackles from the Guan and Ge ware are different — they are intentional. They are sought after because of their aesthetic qualities. Thanks to the Voronoi-like patterns on their surface, each piece is unique. To date, this is one of the most imitated styles of porcelain (Figure 5).&lt;/p&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="https://fbellelli.com//posts/2021-07-08-the-fascinating-world-of-voronoi-diagramsGuan%20Ge%20ware2.png" alt="Guan and Ge wares" width="900" /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-6)Guan and Ge wares
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Voronoi diagrams are also common in graphic arts for creating “abstract” patterns. I think they make excellent background images. For example, I created the thumbnail of this post by generating random points and constructing a Voronoi diagram. Then, I coloured each cell based on the distance of its point from a randomly selected spot in the box (Figure 6). Endless “abstract” backgrounds images could be generated this way.&lt;/p&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="https://fbellelli.com//posts/2021-07-08-the-fascinating-world-of-voronoi-diagramsvoronoi_animation2.gif" alt="Coloured Voronoi diagram"  /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-7)Coloured Voronoi diagram
&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="mathematical-definition-and-some-interesting-properties"&gt;Mathematical definition and some interesting properties&lt;/h2&gt;
&lt;p&gt;So far, we have presented a simple two-dimensional Voronoi diagram. However, the same type of structure can be generalised to an &lt;span class="math inline"&gt;\(n\)&lt;/span&gt;-dimensional space. Suppose &lt;span class="math inline"&gt;\(P=\{p_1,p_2,...,p_m\}\)&lt;/span&gt; is a set of &lt;span class="math inline"&gt;\(m\)&lt;/span&gt; points in our n-dimensional space. Then, the space can be partitioned in &lt;span class="math inline"&gt;\(m\)&lt;/span&gt; Voronoi cells, &lt;span class="math inline"&gt;\(V_i\)&lt;/span&gt;, containing all points in &lt;span class="math inline"&gt;\(\mathbb{R}^n\)&lt;/span&gt; that are closer to &lt;span class="math inline"&gt;\(p_i\)&lt;/span&gt; than to any other point.&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[V_i = \left\{x : \forall j \neq i, d(x, p_i) \leq d(x,p_j)\right\} \text{, with } i,j \in \{1,2,...,m\}\]&lt;/span&gt; Where the function &lt;span class="math inline"&gt;\(d(x,y)\)&lt;/span&gt; gives the distance (&lt;span class="math inline"&gt;\(a\)&lt;/span&gt;) between its two arguments. Typically, the Euclidean distance is used (&lt;span class="math inline"&gt;\(l^2\)&lt;/span&gt; distance):&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[d(x,y)=||x-y||_2=\sqrt{\sum_{k=1}^{n}(x_k-y_k)^2}\]&lt;/span&gt; However, Voronoi diagrams could be designed using other distance functions. For instance, Figure 7 shows a Voronoi diagram obtained with the Manhattan or cityblock distance (&lt;span class="math inline"&gt;\(l^1\)&lt;/span&gt; distance). The Manahattan distance is the distance between two points if you had to follow a regular grid — such as the city blocks of Manhattan. The result is a more “boxy” Voronoi diagram. &lt;span class="math display"&gt;\[d(x,y)=||x-y||_1=\sum_{k=1}^{n}{|x_k-y_k|}\]&lt;/span&gt;&lt;/p&gt;
&lt;aside&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="https://fbellelli.com//posts/2021-07-08-the-fascinating-world-of-voronoi-diagramsdistances.png" alt="Euclidean and Manhattan distance&amp;lt;br&amp;gt;Source:[Johnson Hsieh](https://johnsonhsieh.github.io/DSC2016-R/slide/R-Data-Mining.html#1)" width="539" /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-8)Euclidean and Manhattan distance&lt;br&gt;Source:&lt;a href="https://johnsonhsieh.github.io/DSC2016-R/slide/R-Data-Mining.html#1"&gt;Johnson Hsieh&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/aside&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="https://fbellelli.com//posts/2021-07-08-the-fascinating-world-of-voronoi-diagramsmanhattan-voronoi2.png" alt="Comparison of Voronoi diagrams using the Euclidean (left) and Manhattan (right) distance for a same set of points&amp;lt;br&amp;gt;Source: [Wikipedia](https://en.wikipedia.org/wiki/File:Manhattan_Voronoi_Diagram.svg)" width="600" /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-9)Comparison of Voronoi diagrams using the Euclidean (left) and Manhattan (right) distance for a same set of points&lt;br&gt;Source: &lt;a href="https://en.wikipedia.org/wiki/File:Manhattan_Voronoi_Diagram.svg"&gt;Wikipedia&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Euclidean distance is the most common distance measure in scientific applications of the Voronoi diagram. It also has the advantage of generating Voronoi cells that are &lt;strong&gt;convex&lt;/strong&gt;. That is to say, if you take any two points within a cell, the line that connects the two points will lie entirely within the cell.&lt;/p&gt;
&lt;p&gt;Finally, it should also be noted that Voronoi diagrams are tightly linked with the k-nearest neighbours algorithm (k-NN) — a very popular algorithm in classification, regression and clustering problems. The algorithm uses the &lt;span class="math inline"&gt;\(k\)&lt;/span&gt; closest examples in the training dataset to make value predictions. Since the Voronoi diagrams partitions the space in polygons containing the closest points to each seed, the edges of Voronoi cells correspond exactly to the decision boundaries of a simple 1-nearest neighbour problem.&lt;/p&gt;
&lt;h2 id="delaunay-triangulation"&gt;Delaunay triangulation&lt;/h2&gt;
&lt;p&gt;If you take each of the points from a Voronoi diagram and link it with the points in its neighbouring cells, you will obtain a graph called &lt;strong&gt;Delaunay triangulation&lt;/strong&gt;. In mathematical terms, the Delaunay triangulation is the &lt;a href="https://www.wikiwand.com/en/Dual_graph"&gt;dual graph&lt;/a&gt; of the Voronoi diagram. In the Figure below, a Voronoi diagram (black) and Delaunay triangulation (grey) is plotted from a set of points. By moving the mouse over the image, one can explore how they are affected by a new point.&lt;/p&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;div id="htmlwidget-afcdb3092f080892d2fe" style="width:672px;height:480px;" class="r2d3 html-widget"&gt;&lt;/div&gt;
&lt;script type="application/json" data-for="htmlwidget-afcdb3092f080892d2fe"&gt;{"x":{"data":null,"type":"NULL","container":"svg","options":null,"script":"var d3Script = function(d3, r2d3, data, svg, width, height, options, theme, console) {\nthis.d3 = d3;\n\nsvg = d3.select(svg.node());\n/* R2D3 Source File:  d3/voronoi.js */\n// !preview r2d3 d3_version = 4\n\n// Based on: https://bl.ocks.org/mbostock/4060366\n\nsvg.on(\"touchmove mousemove\", moved);\n\nvar sites = d3.range(100)\n    .map(function(d) { return [Math.random() * width, Math.random() * height]; });\n\nvar voronoi = d3.voronoi()\n    .extent([[-8, -8], [width + 8, height + 8]]);\n\nvar polygon = svg.append(\"g\")\n    .attr(\"class\", \"polygons\")\n  .selectAll(\"path\")\n  .data(voronoi.polygons(sites))\n  .enter().append(\"path\")\n    .call(redrawPolygon);\n\nvar link = svg.append(\"g\")\n    .attr(\"class\", \"links\")\n  .selectAll(\"line\")\n  .data(voronoi.links(sites))\n  .enter().append(\"line\")\n    .call(redrawLink);\n\nvar site = svg.append(\"g\")\n    .attr(\"class\", \"sites\")\n  .selectAll(\"circle\")\n  .data(sites)\n  .enter().append(\"circle\")\n    .attr(\"r\", 2.5)\n    .call(redrawSite);\n\nfunction moved() {\n  sites[0] = d3.mouse(this);\n  redraw();\n}\n\nfunction redraw() {\n  var diagram = voronoi(sites);\n  polygon = polygon.data(diagram.polygons()).call(redrawPolygon);\n  link = link.data(diagram.links()), link.exit().remove();\n  link = link.enter().append(\"line\").merge(link).call(redrawLink);\n  site = site.data(sites).call(redrawSite);\n}\n\nfunction redrawPolygon(polygon) {\n  polygon\n      .attr(\"d\", function(d) { return d ? \"M\" + d.join(\"L\") + \"Z\" : null; });\n}\n\nfunction redrawLink(link) {\n  link\n      .attr(\"x1\", function(d) { return d.source[0]; })\n      .attr(\"y1\", function(d) { return d.source[1]; })\n      .attr(\"x2\", function(d) { return d.target[0]; })\n      .attr(\"y2\", function(d) { return d.target[1]; });\n}\n\nfunction redrawSite(site) {\n  site\n      .attr(\"cx\", function(d) { return d[0]; })\n      .attr(\"cy\", function(d) { return d[1]; });\n}\n};","style":"/* R2D3 Source File:  d3/voronoi.css */\n.links {\n  stroke: #000;\n  stroke-opacity: 0.2;\n}\n\n.polygons {\n  fill: none;\n  stroke: #000;\n  stroke-opacity: 1;\n}\n\n.polygons :first-child {\n  fill: #f00;\n  fill-opacity: 0.4;\n}\n\n.sites {\n  fill: #000;\n  stroke: #fff;\n}\n\n.sites :first-child {\n  fill: #fff;\n}","version":4,"theme":{"default":{"background":"#FFFFFF","foreground":"#000000"},"runtime":null},"useShadow":true},"evals":[],"jsHooks":[]}&lt;/script&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-10)Voronoi diagram and Delaunay triangulation&lt;br&gt;Source: &lt;a href="https://rstudio.github.io/r2d3/articles/gallery/voronoi/"&gt;r2d3&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Delaunay triangulation is just as amazing as Voronoi diagrams. As the name suggests, it produces a set of triangles linking our points. These triangles are such that if one were to draw a circle across the vertices of these triangles, there would be no other point inside the circle (See Figure 10). Moreover, Delaunay triangulation also has the property of maximising the smallest angle of in the triangles of the triangulation. Hence, Delaunay triangulation tends to avoid triangles with acute angles.&lt;/p&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="file43849c32422_files/figure-html/unnamed-chunk-11-1.png" alt="Delaunay triangles are constructed such that no point falls inside the circle circumscribing each triangle&amp;lt;br&amp;gt;Source: [Wikipedia](https://en.wikipedia.org/wiki/File:Delaunay_circumcircles_vectorial.svg)" width="350" /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-11)Delaunay triangles are constructed such that no point falls inside the circle circumscribing each triangle&lt;br&gt;Source: &lt;a href="https://en.wikipedia.org/wiki/File:Delaunay_circumcircles_vectorial.svg"&gt;Wikipedia&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;These properties make it very useful in modelling surfaces and objects from a set of points. For instance, the Delaunay triangulation is used to generate meshes for the &lt;a href="https://people.eecs.berkeley.edu/~jrs/meshpapers/delnotes.pdf"&gt;finite element method&lt;/a&gt; and in facial recognition, construct 3D models for computer animations and model terrain in GIS analysis.&lt;/p&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="https://learnopencv.com/wp-content/uploads/2015/11/opencv-delaunay-Voronoi-subdiv-example.jpg" alt="Delaunay triangulation is used to produce meshes for facial recognition&amp;lt;br&amp;gt;Source: [Learn OpenCV](https://learnopencv.com/delaunay-triangulation-and-voronoi-diagram-using-opencv-c-python/)"  /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-12)Delaunay triangulation is used to produce meshes for facial recognition&lt;br&gt;Source: &lt;a href="https://learnopencv.com/delaunay-triangulation-and-voronoi-diagram-using-opencv-c-python/"&gt;Learn OpenCV&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="lloyds-relaxation-algorithm"&gt;Lloyd’s relaxation algorithm&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Llyod’s algorithm&lt;/strong&gt; is a useful algorithm related to Voronoi diagrams. The algorithm consists in repeatedly alternating between constructing Voronoi diagrams and finding the centroids (i.e. center of mass) of each cell (See Figure 12). At each iteration, the algorithm spaces the points apart and produces more homogeneous Voronoi cells.&lt;/p&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="https://fbellelli.com//posts/2021-07-08-the-fascinating-world-of-voronoi-diagramslloyds.png" alt="Steps in Lloyd's relaxation algorithm" width="1200" /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-13)Steps in Lloyd’s relaxation algorithm
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After a few iterations, the cells will already have a “rounder” aspect and points will be more evenly distributed. This is illustrated in the figure below, in which I have plotted the first 30 iterations of the Lloyd’s algorithm for a random set of points. For each point, I also record their starting position (grey hollow circle) to better trace the movement of each cell. For high number of iterations, the diagram tends to converge towards a stable Voronoi diagram in which every seed is also the centroid of the cell — also known as the &lt;a href="https://en.wikipedia.org/wiki/Centroidal_Voronoi_tessellation"&gt;centroidal Voronoi diagram&lt;/a&gt;. Interestingly, in 2D, Voronoi cells will tend to turn into hexagons because they provide the most efficient way of of packing shapes in a plane. As any bee building their hive can certify, hexagonal cells have two big advantages: 1) they ensure no empty space is left between cells (i.e. tessellates the plane), and 2) hexagons offer the highest ratio between surface and perimeter of the cell. This so-called &lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Honeycomb_conjecture"&gt;Honeycomb conjecture&lt;/a&gt;&lt;/strong&gt;, took mathematicians two-thousand years to prove.&lt;/p&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="https://fbellelli.com//posts/2021-07-08-the-fascinating-world-of-voronoi-diagramslloyds-line.gif" alt="30 iterations of the Lloyd's algorithm"  /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-14)30 iterations of the Lloyd’s algorithm
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In data science, Lloyd’s algorithm is at the basis of &lt;strong&gt;k-means clustering&lt;/strong&gt; — one of the most popular clustering algorithms. k-means clustering is typically initiated by taking &lt;span class="math inline"&gt;\(k\)&lt;/span&gt; random “centroids” in space. Then, data points are grouped in &lt;span class="math inline"&gt;\(k\)&lt;/span&gt; clusters by alternating between 1) assigning data points to the closest “centroid” (this is equivalent to building a Voronoi diagram for the centroid and checking which point are inside the cell) and 2) updating the centroid by calculating the mean of the points inside each cell (See Figure 14).&lt;/p&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="https://fbellelli.com//posts/2021-07-08-the-fascinating-world-of-voronoi-diagramsK-means_convergence.gif" alt="k-means clustering&amp;lt;br&amp;gt;Soruce: [Wikipedia](https://en.wikipedia.org/wiki/File:K-means_convergence.gif)"  /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-15)k-means clustering&lt;br&gt;Soruce: &lt;a href="https://en.wikipedia.org/wiki/File:K-means_convergence.gif"&gt;Wikipedia&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Besides data science, Lloyd’s algorithm is used in a variety of applications. For instance, it is very common in quantization and lossy data compression algorithms (e.g. &lt;a href="http://helmut.knaust.info/presentations/2011/20110106_JMM_DWT.pdf"&gt;Lloyd-Max algorithm&lt;/a&gt;). It is also very useful whenever one wants random points that are nicely spaced. For instance, it could be used to smooth meshes generated from the Delaunay triangulation, for &lt;a href="https://en.wikipedia.org/wiki/Dither"&gt;dithering&lt;/a&gt; images, or as a basis for &lt;a href="https://en.wikipedia.org/wiki/Procedural_generation"&gt;procedural maps generation&lt;/a&gt; in video games.&lt;/p&gt;
&lt;h2 id="how-to-construct-voronoi-diagrams"&gt;How to construct Voronoi diagrams?&lt;/h2&gt;
&lt;p&gt;One could construct Voronoi diagrams by building each cell one by one. If one extends the bisector of the segments linking every combination of points, it is possible to obtain the outline of Voronoi cells (Figure 15). However, this technique is quite inefficient. Considering there are &lt;span class="math inline"&gt;\(\frac{1}{2}(1-n)n\)&lt;/span&gt; combinations of points, the complexity of such algorithm would increase quadratically with the number of points.&lt;/p&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="https://fbellelli.com//posts/2021-07-08-the-fascinating-world-of-voronoi-diagramsconstruct-voronoi2.jpg" alt="Construction of Voronoi cells&amp;lt;br&amp;gt;Source: [Roberto Tamassia](http://cs.brown.edu/courses/cs252/misc/resources/lectures/pdf/notes09.pdf)" width="668" /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-16)Construction of Voronoi cells&lt;br&gt;Source: &lt;a href="http://cs.brown.edu/courses/cs252/misc/resources/lectures/pdf/notes09.pdf"&gt;Roberto Tamassia&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;More efficient alternatives have been proposed. For example, the &lt;a href="https://en.wikipedia.org/wiki/Fortune%27s_algorithm"&gt;Sweep line algorithm&lt;/a&gt; builds Voronoi cells progressively by sequentially using binary search tree and priority queue operations (Figure 16). A good description of this algorithm can be found &lt;a href="https://www.ams.org/publicoutreach/feature-column/fcarc-voronoi"&gt;here&lt;/a&gt;. Another way of constructing Voronoi diagrams, is to first build Delaunay triangulations. Once the triangulation is obtained, extending the bisectors of the triangle edges leads to the Voronoi diagram (Figure 17). Delaunay triangulation can be obtained without the need of considering every pair of points. For instance, an efficient technique consists in projecting the points on a paraboloid in a higher dimension. Re-projecting back the convex hull onto the original space gives the Delaunay triangulation (Figure 18)&lt;/p&gt;
&lt;aside&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="https://fbellelli.com//posts/2021-07-08-the-fascinating-world-of-voronoi-diagramsFortunes-algorithm-slowed.gif" alt="Sweep line algorithm&amp;lt;br&amp;gt;Source: [Wikipedia](https://en.wikipedia.org/wiki/Fortune%27s_algorithm)"  /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-17)Sweep line algorithm&lt;br&gt;Source: &lt;a href="https://en.wikipedia.org/wiki/Fortune%27s_algorithm"&gt;Wikipedia&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/aside&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="https://fbellelli.com//posts/2021-07-08-the-fascinating-world-of-voronoi-diagramsconstruct-voronoi.jpg" alt="Construction of Voronoi diagrams&amp;lt;br&amp;gt;Source: [Giulia Andreucci](https://www.frontiersin.org/articles/10.3389/fbuil.2018.00078/full)" width="542" /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-18)Construction of Voronoi diagrams&lt;br&gt;Source: &lt;a href="https://www.frontiersin.org/articles/10.3389/fbuil.2018.00078/full"&gt;Giulia Andreucci&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure" style="text-align: center"&gt;
&lt;img src="https://fbellelli.com//posts/2021-07-08-the-fascinating-world-of-voronoi-diagramsconstruct-voronoi-convex.jpg" alt="Using the convex hull method for constructing Delaunay triangulation&amp;lt;br&amp;gt;Source: [Danny Sleator](https://www.cs.cmu.edu/~15451-s15/LectureNotes/lecture17/voronoi.pdf)" width="606" /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-19)Using the convex hull method for constructing Delaunay triangulation&lt;br&gt;Source: &lt;a href="https://www.cs.cmu.edu/~15451-s15/LectureNotes/lecture17/voronoi.pdf"&gt;Danny Sleator&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;A discussion of different algorithms for computing Voronoi diagram and their complexity is available &lt;a href="http://www.cs.tufts.edu/comp/163/notes05/voronoi_handout.pdf"&gt;here&lt;/a&gt;, &lt;a href="https://www.ic.unicamp.br/~rezende/ensino/mo619/Sacristan,%20Voronoi%20Diagrams.pdf"&gt;here&lt;/a&gt;, and &lt;a href="https://www.codeproject.com/articles/882739/simple-approach-to-voronoi-diagrams"&gt;here&lt;/a&gt;. New algorithms are continuously being proposed to improve computation efficiency in different circumstances (e.g. &lt;a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/12/Efficient-Computation-of-Clipped-Voronoi-Diagram-and-Applications.pdf"&gt;Yan et al. 2011&lt;/a&gt;, &lt;a href="https://onlinelibrary.wiley.com/doi/abs/10.1111/cgf.13248"&gt;Qin et al. 2017&lt;/a&gt;). There are also techniques requiring constant time that generate approximate Voronoi diagrams (e.g. &lt;a href="Jump%20Flooding%20Algorithm"&gt;Jump flooding algorithm&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id="links-to-additional-material"&gt;Links to additional material&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://plus.maths.org/content/uncovering-cause-cholera"&gt;This article&lt;/a&gt; tells the story of how Voronoi diagrams were used by John Snow to show the link between water pumps and the transmission of Cholera during the 1854 London outbreak.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://simblob.blogspot.com/search/label/voronoi"&gt;Amil Patel&lt;/a&gt; has a phenomenal blog on game development. I highly recommend his posts on procedural map generation with Voronoi diagrams.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.ams.org/publicoutreach/feature-column/fcarc-voronoi"&gt;This post by David Austin&lt;/a&gt; gives a great explanation of the Sweep line algorithm for computing Voronoi diagrams.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.jasondavies.com/maps/voronoi/airports/"&gt;This nice looking map&lt;/a&gt; by Jason Davies is a Voronoi diagram of the location of airports around the world.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;&lt;a href="https://onlinelibrary.wiley.com/doi/book/10.1002/9780470317013"&gt;Spatial Tessellations: Concepts and Applications of Voronoi Diagrams&lt;/a&gt;&lt;/em&gt; is a bible on Voronoi diagrams. If you have any doubt about Voronoi diagrams, you will certainly find an answer here.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://perso.uclouvain.be/vincent.legat/documents/meca2170/meca2170-cours7-Voronoi.pdf"&gt;These slides&lt;/a&gt; from Vincent Legat have some beautiful drawings for different construction algorithms.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Voronoi diagrams are commonly used to model trees in forests (e.g. &lt;a href="https://pommerening.org/wiki/images/a/a4/Vorest.pdf"&gt;Abellanas et al. 2016&lt;/a&gt;, &lt;a href="https://www.sciencedirect.com/science/article/abs/pii/S0925772117300652"&gt;Bohler et al. 2018&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Voronoi diagrams can also be used to determine robot’s paths. Check these articles: &lt;a href="http://www.cs.columbia.edu/~pblaer/projects/path_planner/"&gt;article 1&lt;/a&gt;, &lt;a href="https://gamedevelopment.tutsplus.com/tutorials/how-to-use-voronoi-diagrams-to-control-ai--gamedev-11778"&gt;article 2&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Voronoi diagrams have thousand of applications. From modelling trees in a forest to planning robot paths. In this article I barely scratched the surface. These links contain lists of interesting applications: &lt;a href="https://www.ics.uci.edu/~eppstein/gina/voronoi.html"&gt;link 1&lt;/a&gt;, &lt;a href="https://www.ics.uci.edu/~eppstein/gina/scot.drysdale.html"&gt;link 2&lt;/a&gt;, &lt;a href="https://en.cnki.com.cn/Article_en/CJFDTotal-GCTX200402022.htm"&gt;link3&lt;/a&gt;, &lt;a href="https://ratt.ced.berkeley.edu/readings/read_online/Aurenhammer.%20%20Voronoi%20diagrams.%20%20A%20survey%20of%20a%20fundamental%20geometric%20data%20structure.pdf"&gt;link4&lt;/a&gt;, &lt;a href="https://www.sciencedirect.com/topics/physics-and-astronomy/voronoi-diagrams"&gt;link 5&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="footnotes"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn1"&gt;&lt;p&gt;To be more precise, the “Water cube” patterns are inspired from &lt;a href="https://en.wikipedia.org/wiki/Weaire%E2%80%93Phelan_structure"&gt;Weaire-Phelan&lt;/a&gt; bubbles. However, these are directly obtainable as Voronoi diagram.&lt;a href="#fnref1" class="footnote-back"&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
      <distill:md5>08548cc1ea41c664285081b5622e25e2</distill:md5>
      <category>maths</category>
      <category>other</category>
      <guid>https://fbellelli.com/posts/2021-07-08-the-fascinating-world-of-voronoi-diagrams</guid>
      <pubDate>Wed, 07 Jul 2021 00:00:00 +0000</pubDate>
      <media:content url="https://fbellelli.com/posts/2021-07-08-the-fascinating-world-of-voronoi-diagrams/voronoi_animation2.gif" medium="image" type="image/gif"/>
    </item>
    <item>
      <title>A package for country data</title>
      <dc:creator>Francesco S. Bellelli</dc:creator>
      <link>https://fbellelli.com/posts/2021-06-20-a-package-for-country-data</link>
      <description>I am working on an R package designed to quickly wrangle, merge and explore country data</description>
      <category>coding</category>
      <guid>https://fbellelli.com/posts/2021-06-20-a-package-for-country-data</guid>
      <pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate>
      <media:content url="https://cdn.britannica.com/13/129613-131-30279F20/Flags-world-flags-Country-history-blog-travel-2009.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>TileMaster: a strategy game in Shiny</title>
      <dc:creator>Francesco S. Bellelli</dc:creator>
      <link>https://fbellelli.com/posts/2021-04-03-tilemaster-a-strategy-game-in-shiny</link>
      <description>I created a small strategy game with RStudios' Shiny platform. If it can run a data dashboard, why not a strategy game?</description>
      <category>coding</category>
      <guid>https://fbellelli.com/posts/2021-04-03-tilemaster-a-strategy-game-in-shiny</guid>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
      <media:content url="https://fbellelli.com/posts/2021-04-03-tilemaster-a-strategy-game-in-shiny/../../images/tilemaster_screenshot.png" medium="image" type="image/png" width="1599" height="1531"/>
    </item>
    <item>
      <title>How to increase participation in environmental agreements?</title>
      <dc:creator>Francesco S. Bellelli</dc:creator>
      <link>https://fbellelli.com/posts/2021-03-20-how-to-increase-participation-in-environmental-agreements</link>
      <description>Understanding the determinants of participation in environmental agreements can help us frame more successful agreements. In this article, I discuss the economic theory and empirical evidence on this topic.</description>
      <category>environment</category>
      <category>economics</category>
      <guid>https://fbellelli.com/posts/2021-03-20-how-to-increase-participation-in-environmental-agreements</guid>
      <pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate>
      <media:content url="https://fbellelli.com/posts/2021-03-20-how-to-increase-participation-in-environmental-agreements/map-number-ratifications.png" medium="image" type="image/png" width="7017" height="4209"/>
    </item>
    <item>
      <title>Watercolours</title>
      <dc:creator>Francesco S. Bellelli</dc:creator>
      <dc:creator>Lily Runkun Tian</dc:creator>
      <link>https://fbellelli.com/posts/2021-01-27-watercolours</link>
      <description>A gallery displaying some of the artistic creations of Francesco and Lily</description>
      <category>other</category>
      <guid>https://fbellelli.com/posts/2021-01-27-watercolours</guid>
      <pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate>
      <media:content url="https://fbellelli.com/posts/2021-01-27-watercolours/paintings/squirrel.jpeg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>Mappa licita naturale</title>
      <dc:creator>Francesco S. Bellelli</dc:creator>
      <link>https://fbellelli.com/posts/2021-01-20-mappa-licita-naturale</link>
      <description>Mappa di un sistema di licita naturale lungo-corto a bridge</description>
      <category>other</category>
      <guid>https://fbellelli.com/posts/2021-01-20-mappa-licita-naturale</guid>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      <media:content url="https://fbellelli.com/posts/2021-01-20-mappa-licita-naturale/BRIDGE sistema naturale.svg" medium="image" type="image/svg+xml"/>
    </item>
  </channel>
</rss>
